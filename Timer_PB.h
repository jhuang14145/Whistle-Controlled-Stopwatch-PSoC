//*****************************************************************************
//*****************************************************************************
//  FILENAME: Timer_PB.h
//   Version: 2.70, Updated on 2015/3/4 at 22:27:48
//  Generated by PSoC Designer 5.4.3191
//
//  DESCRIPTION: Timer8 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2015. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Timer_PB_INCLUDE
#define Timer_PB_INCLUDE

#include <m8c.h>

#pragma fastcall16 Timer_PB_EnableInt                 //                 Proxy 1
#pragma fastcall16 Timer_PB_DisableInt                //                 Proxy 1
#pragma fastcall16 Timer_PB_Start                     //                 Proxy 1
#pragma fastcall16 Timer_PB_Stop                      //                 Proxy 1
#pragma fastcall16 Timer_PB_bReadTimer                // Read  DR0       Proxy 1
#pragma fastcall16 Timer_PB_bReadTimerSaveCV          // Read  DR0       Proxy 2
#pragma fastcall16 Timer_PB_WritePeriod               // Write DR1       Proxy 1
#pragma fastcall16 Timer_PB_bReadCompareValue         // Read  DR2       Proxy 1
#pragma fastcall16 Timer_PB_WriteCompareValue         // Write DR2       Proxy 1

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 bTimer_PB_ReadCounter              // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer_PB_CaptureCounter           // Read  DR0 "Obsolete"
#pragma fastcall16 bTimer_PB_ReadTimer                // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer_PB_ReadTimerSaveCV          // Read  DR0 (Deprecated)
#pragma fastcall16 bTimer_PB_ReadCompareValue         // Read  DR2 (Deprecated)


//-------------------------------------------------
// Prototypes of the Timer_PB API.
//-------------------------------------------------

extern void Timer_PB_EnableInt(void);
extern void Timer_PB_DisableInt(void);
extern void Timer_PB_Start(void);
extern void Timer_PB_Stop(void);
extern BYTE Timer_PB_bReadTimer(void);
extern BYTE Timer_PB_bReadTimerSaveCV(void);
extern void Timer_PB_WritePeriod(BYTE bPeriod);
extern BYTE Timer_PB_bReadCompareValue(void);
extern void Timer_PB_WriteCompareValue(BYTE bCompareValue);

// The following functions are deprecated.
// They may be omitted in future releases
//
extern BYTE bTimer_PB_ReadCompareValue(void);       // Deprecated
extern BYTE bTimer_PB_ReadTimerSaveCV(void);        // Deprecated
extern BYTE bTimer_PB_ReadCounter(void);            // Obsolete
extern BYTE bTimer_PB_ReadTimer(void);              // Deprecated
extern BYTE bTimer_PB_CaptureCounter(void);         // Obsolete


//--------------------------------------------------
// Constants for Timer_PB API's.
//--------------------------------------------------

#define Timer_PB_CONTROL_REG_START_BIT         ( 0x01 )
#define Timer_PB_INT_REG_ADDR                  ( 0x0e1 )
#define Timer_PB_INT_MASK                      ( 0x04 )


//--------------------------------------------------
// Constants for Timer_PB user defined values
//--------------------------------------------------

#define Timer_PB_PERIOD                        ( 0xc8 )
#define Timer_PB_COMPARE_VALUE                 ( 0x00 )


//-------------------------------------------------
// Register Addresses for Timer_PB
//-------------------------------------------------

#pragma ioport  Timer_PB_COUNTER_REG:   0x028              //DR0 Count register
BYTE            Timer_PB_COUNTER_REG;
#pragma ioport  Timer_PB_PERIOD_REG:    0x029              //DR1 Period register
BYTE            Timer_PB_PERIOD_REG;
#pragma ioport  Timer_PB_COMPARE_REG:   0x02a              //DR2 Compare register
BYTE            Timer_PB_COMPARE_REG;
#pragma ioport  Timer_PB_CONTROL_REG:   0x02b              //Control register
BYTE            Timer_PB_CONTROL_REG;
#pragma ioport  Timer_PB_FUNC_REG:  0x128                  //Function register
BYTE            Timer_PB_FUNC_REG;
#pragma ioport  Timer_PB_INPUT_REG: 0x129                  //Input register
BYTE            Timer_PB_INPUT_REG;
#pragma ioport  Timer_PB_OUTPUT_REG:    0x12a              //Output register
BYTE            Timer_PB_OUTPUT_REG;
#pragma ioport  Timer_PB_INT_REG:       0x0e1              //Interrupt Mask Register
BYTE            Timer_PB_INT_REG;


//-------------------------------------------------
// Timer_PB Macro 'Functions'
//-------------------------------------------------

#define Timer_PB_Start_M \
   ( Timer_PB_CONTROL_REG |=  Timer_PB_CONTROL_REG_START_BIT )

#define Timer_PB_Stop_M  \
   ( Timer_PB_CONTROL_REG &= ~Timer_PB_CONTROL_REG_START_BIT )

#define Timer_PB_EnableInt_M   \
   M8C_EnableIntMask(  Timer_PB_INT_REG, Timer_PB_INT_MASK )

#define Timer_PB_DisableInt_M  \
   M8C_DisableIntMask( Timer_PB_INT_REG, Timer_PB_INT_MASK )

#endif
// end of file Timer_PB.h
